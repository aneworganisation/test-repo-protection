name: Setup Branch Protection & Naming Rules
on:
  workflow_dispatch:

# permissions block not needed since we use PAT for everything
jobs:
  protect-and-configure:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      ADMIN_TOKEN: ${{ secrets.REPO_ADMIN_TOKEN }}
    steps:
      - name: Verify admin token present
        run: |
          if [ -z "${ADMIN_TOKEN}" ]; then
            echo "Missing REPO_ADMIN_TOKEN secret with Administration & Contents: Read/Write." >&2
            exit 1
          fi

      - name: Get repository ID (GraphQL via PAT)
        id: repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.ADMIN_TOKEN }}
          script: |
            const q = `query($owner:String!, $name:String!){
              repository(owner:$owner, name:$name){ id }
            }`;
            const res = await github.graphql(q, {
              owner: process.env.OWNER,
              name:  process.env.REPO,
            });
            core.setOutput('id', res.repository.id);

      - name: Protect main (GraphQL via PAT)
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.ADMIN_TOKEN }}
          script: |
            const mutation = `
              mutation($repositoryId: ID!) {
                createBranchProtectionRule(input:{
                  repositoryId: $repositoryId
                  pattern: "main"
                  requiresApprovingReviews: true
                  requiredApprovingReviewCount: 2
                  dismissesStaleReviews: true
                  requiresCodeOwnerReviews: true
                  requiresStatusChecks: true
                  requiresStrictStatusChecks: true
                  requiredStatusCheckContexts: [
                    "build","unit-tests","lint","sast","coverage"
                  ]
                  requiresConversationResolution: true
                  requiresCommitSignatures: true
                  isAdminEnforced: true
                  allowsForcePushes: false
                  allowsDeletions: false
                }) { branchProtectionRule { id } }
              }`;
            await github.graphql(mutation, { repositoryId: '${{ steps.repo.outputs.id }}' });

      - name: Protect release/* (GraphQL via PAT)
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.ADMIN_TOKEN }}
          script: |
            const mutation = `
              mutation($repositoryId: ID!) {
                createBranchProtectionRule(input:{
                  repositoryId: $repositoryId
                  pattern: "release/*"
                  requiresApprovingReviews: true
                  requiredApprovingReviewCount: 1
                  dismissesStaleReviews: true
                  requiresCodeOwnerReviews: true
                  requiresStatusChecks: true
                  requiresStrictStatusChecks: true
                  requiredStatusCheckContexts: [
                    "build","unit-tests","lint","sast","coverage"
                  ]
                  requiresConversationResolution: true
                  requiresCommitSignatures: true
                  isAdminEnforced: true
                  allowsForcePushes: false
                  allowsDeletions: false
                }) { branchProtectionRule { id } }
              }`;
            await github.graphql(mutation, { repositoryId: '${{ steps.repo.outputs.id }}' });

      - name: Protect release tags v* (REST via PAT)
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          gh api -X POST -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$REPO/tags/protection" \
            -f pattern='v*' || true

      - name: Commit branch-name check workflow (using PAT)
        env:
          GH_EMAIL: actions@users.noreply.github.com
          GH_NAME: github-actions
        run: |
          set -e
          mkdir -p .github/workflows
          cat > .github/workflows/branch-name-check.yml <<'WF'
          name: Branch name check
          on:
            create:
            push:
              branches-ignore:
                - main
                - 'release/*'
          jobs:
            enforce:
              runs-on: ubuntu-latest
              steps:
                - name: Validate branch name
                  run: |
                    BRANCH="${GITHUB_REF_NAME}"
                    PATTERN='^(feat|fix|hotfix|chore|refactor|docs|test|perf|build|ci|revert)\/[a-z0-9._-]+$'
                    if [[ "$BRANCH" =~ ^(main|release\/.+)$ ]]; then
                      echo "Skipping enforcement for $BRANCH"
                      exit 0
                    fi
                    if [[ "$BRANCH" =~ $PATTERN ]]; then
                      echo "Branch name OK: $BRANCH"
                    else
                      echo "❌ Branch name '$BRANCH' does not match $PATTERN" >&2
                      exit 1
                    fi
          WF

          git init
          git checkout -b temp-setup
          git config user.email "$GH_EMAIL"
          git config user.name "$GH_NAME"
          git add .github/workflows/branch-name-check.yml
          git commit -m "chore: add branch name enforcement workflow" || echo "No changes"
          # push via PAT
          git remote add origin "https://${OWNER}:${ADMIN_TOKEN}@github.com/${OWNER}/${REPO}.git"
          # push to main; create it if it doesn't exist yet
          git push -u origin HEAD:main || true
